<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로.xml는 생략 -->
<!-- ※ ibatis와는 다르게 id값에 .(dot)을 사용 못한다 -->
<mapper namespace="mybatis.Android">

	<select id="anIsLogin" parameterType="androidDTO" resultType="androidDTO">
		SELECT * FROM users WHERE username=#{username} and password=#{password}
	</select>

	<select id="createEroom" parameterType="java.util.Map" resultType="int">
		INSERT INTO eattogether_room (er_no,ER_MASTER,username,er_title,er_content,er_time,er_tend,er_max,er_postdate) 
        SELECT SEQ_ERR.nextval,#{username},#{store_id},#{ERtitle},#{ERcontent},#{ERtime},#{ER_TEND},#{ERmax},SYSDATE FROM DUAL
        WHERE NOT EXISTS 
        (SELECT * FROM eattogether_room WHERE USERNAME = #{store_id} AND ER_MASTER=#{username})
	</select>
	
	<select id="getRoomNo" parameterType="java.util.Map" resultType="int">
		 select er_no from eattogether_room where er_master = #{username} and username = #{store_id}
	</select>
	
	<select id="getRoomMaster" parameterType="java.util.Map" resultType="java.lang.String">
		 select ER_MASTER from eattogether_room where er_no = #{er_no}
	</select>
	
	<insert id="creatERC" parameterType="java.util.Map">
		INSERT INTO er_chat(erc_no,er_no,erc_content) 
        SELECT SEQ_ERC.nextval,#{er_no},'어서오세요 같이먹자 채팅방입니다.즐거운 시간되세요!' FROM DUAL
        WHERE not EXISTS 
        (SELECT * FROM er_chat ec join eattogether_room er on ec.er_no=er.er_no
        WHERE USERNAME = #{store_id} AND ER_MASTER=#{er_master})
	</insert>
	
	<select id="getERoomCno" parameterType="java.util.Map" resultType="int">
		 select erc_no from er_chat where er_no = #{er_no}
	</select>
	
	 <insert id="joinERoom" parameterType="java.util.Map">
		   INSERT INTO er_members (erjoin_num,er_no,username,erjoin_date,erjoin_role,erc_no) 
            SELECT SEQ_ERMEMBERS.nextval,#{er_no},#{username},sysdate,0,#{erc_no} FROM DUAL
            WHERE NOT EXISTS 
            (SELECT * FROM er_members em join eattogether_room er on er.er_no=em.er_no            
            WHERE em.USERNAME = #{username} and er.er_no=#{er_no})
	</insert> 
	
	<select id="selectrool" parameterType="java.util.Map" resultType="int">
		select erjoin_role from er_members where username=#{username} and er_no=#{er_no}
	</select>
	
	<update id="setupER_role" parameterType="java.util.Map" >
		update er_members set ERJOIN_ROLE = 1 where username = #{username}
	</update>
	
	<select id="getAndroidReviewList" parameterType="java.util.Map" resultType="androidReviewDTO">
		select rv_no,rv_title,rv_content,re.rv_postdate,u.u_nick,u.u_img,u.username from storereview re join users u  on re.user_email = u.username where store_name = #{username} ORDER by  rv_postdate desc
	</select>
	
	<select id="getAndroidReviewImg" parameterType="java.util.Map" resultType="androidReviewImgDTO">
		select * from review_file  where rv_no=#{rv_no}
	</select>
		
	<select id="getAndroidUserInfo" parameterType="java.util.Map" resultType="usersDTO">
		select * from users where username =#{username}
	</select>	
	
	
	<select id="getMyAndroidReviewList" parameterType="java.util.Map" resultType="androidReviewDTO">
		select rv_no,rv_title,rv_content,re.rv_postdate,u.u_nick,u.u_img,u.username from storereview re join users u  on re.user_email = u.username where u.username = #{username} ORDER by  rv_postdate desc
	</select>
	
	<delete id="deleteAndroidReview" parameterType="java.util.Map">
		delete storereview where rv_no = #{rv_no}
	</delete>
	
	<insert id="FallowAndroidReview" parameterType="java.util.Map">
		INSERT INTO my_storelist (ms_no, ms_postdate,ms_coment,store_name,user_email) 
            SELECT SEQ_MYSTORE.nextval,sysdate,#{fallow_content},#{store_id},#{user_id}
            FROM DUAL
            WHERE NOT EXISTS 
            (SELECT * FROM my_storelist 
            WHERE user_email = #{user_id} and store_name = #{store_id})
	</insert>
	
	<select id="getFallowList" parameterType="java.util.Map" resultType="fallowDTO">
		select ms.ms_no,s.store_name,s.username, ms.ms_postdate,sf.sf_path,ms.user_email
		from my_storelist ms join stores s
		on ms.store_name = s.username
		join (
		SELECT sf_path,username FROM store_file 
		WHERE  ROWID IN (SELECT MAX(ROWID) FROM store_file GROUP BY username)
		) sf on sf.username=s.username
		WHERE ms.user_email =#{user_id} 
	</select>
	
	<delete id="deleteAndroidFallow" parameterType="java.util.Map">
		delete my_storelist where ms_no = #{ms_no}
	</delete>
	
	<select id="getRequestERList" parameterType="java.util.Map" resultType="androidERDTO">
		select s.store_name,
		s.username "store_id",
		er.er_title,
		er.er_postdate,
		erm.username "user_id",
		erm.erjoin_num,
		u.u_nick,
		u.u_tend,
		u.u_age,
		u.u_img
		from eattogether_room er join stores s on er.username=s.username
		join er_members erm on erm.er_no = er.er_no
		join users u on u.username = erm.username
		where er.er_master=#{user_id} and erm.erjoin_role=0
	</select>
	
	<update id="androidRequestER_Accept" parameterType="java.util.Map">
		update er_members set erjoin_role =1 where erjoin_num=#{erjoin_num}
	</update>
	
	<update id="androidRequestER_Reject" parameterType="java.util.Map">
		update er_members set erjoin_role =-1 where erjoin_num=#{erjoin_num}
	</update>
	
	<select id="getMyRequestERList" parameterType="java.util.Map" resultType="androidMyERDTO">
		select 
		er.er_no,
		erm.erjoin_num,
		s.store_name,
		er.er_title,
		er.er_tend,
		er.er_max,
		er.er_time,
		u.u_nick,
		u.u_tend,
		u.u_age,
		u.u_img,
		u.username "u_id"
		from er_members erm 
		join eattogether_room er on erm.er_no=er.er_no
		join users u on er.er_master= u.username
		join stores s on er.username = s.username
		where erm.username = #{user_id} and erm.erjoin_role=1
	</select>
	
	<select id="myERoomCList" parameterType="java.util.Map" resultType="ercDTO">
		 select em.er_no, em.username,em.erc_no,
          er.er_master,er.username as store_id,
          er.er_title,er.er_content,er.er_time,er.er_tend,
          er.er_max
          from er_members em join eattogether_room er 
          on em.er_no = er.er_no 
          where em.username=#{username} and em.erjoin_role=1 ORDER BY erc_no DESC
	</select>
	
	<select id="getMasterNick" parameterType="java.util.Map" resultType="java.lang.String">
		select u_nick from users where username = #{er_master}
	</select>
	<select id="getMasterimg" parameterType="java.util.Map" resultType="java.lang.String">
		select u_img from users where username = #{er_master}
	</select>
	
	
	<select id="getStoreInfos" parameterType="java.util.Map" resultType="storeDTO">
		select * from stores where username = #{store_id}
	</select>
	
	<select id="eRoomold" parameterType="java.util.Map" resultType="java.lang.String">
		select ERC_CONTENT from er_chat where erc_no = #{erc_no} and er_no = #{er_no}
	</select>

	<delete id="androidDeleteERMembers" parameterType="java.util.Map">
		delete er_members where er_no=#{er_no} and username=#{user_id}
	</delete>
	
	<delete id="boomERMember" parameterType="java.util.Map">
		delete er_members where er_no=#{er_no}
	</delete>
	<delete id="boomERC" parameterType="java.util.Map">
		delete er_chat where er_no=#{er_no}
	</delete>
	<delete id="boomER" parameterType="java.util.Map">
		delete eattogether_room where er_no=#{er_no}
	</delete>
</mapper>