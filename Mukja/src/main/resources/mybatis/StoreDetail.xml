<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로.xml는 생략 -->
<!-- ※ ibatis와는 다르게 id값에 .(dot)을 사용 못한다 -->
<mapper namespace="mybatis.StoreDetail">

	<select id="getStoreDetailInfo" parameterType="java.util.Map" resultType="storeDTO">
    	 select * from Stores s join foodmenu f on s.username = f.username where s.username = #{username}
    </select>
 	 <select id="getReviewCount" parameterType="java.util.Map" resultType="int">
    	 select count(*) from storereview where store_name = #{username}
    </select>
 	 <select id="getFoodMenu" parameterType="java.util.Map" resultType="foodMenuDTO">
    	 select * from foodmenu where username = #{username}
    </select>
     <select id="getStoreIMG" parameterType="java.util.Map" resultType="storeIMGDTO">
    	 select * from store_file where username = #{username}
    </select>
     <select id="getFoodIMG" parameterType="java.lang.String" resultType="foodIMGDTO">
    	 select * from fm_file where menu_no = #{menu_no}
    </select>
    
    
    
    <update id="updateStoreAvg" parameterType="java.util.Map">
    	update store_avg set sa_avg=#{starCount} where store_id=#{store_id} and user_id=#{user_id}
    </update>
    <insert id="insertStoreAvg"  parameterType="java.util.Map">
    	insert into store_avg values(SEQ_SA.nextval,#{store_id},#{starCount},#{user_id})
    </insert>
    <select id="selectAvg" parameterType="java.util.Map" resultType="int">
    	select count(*) from store_avg where store_id=#{store_id} and user_id=#{user_id}
    </select>
     <select id="getStoreAvg" parameterType="java.util.Map" resultType="float">
    	select avg(sa_avg) from store_avg where store_id=#{username}
    </select>
    
    
    

	
     <select id="getStoreThumb" parameterType="java.util.Map" resultType="int">
    	select count(*) from store_thumb where store_id=#{username}
    </select>
    <select id="isThumb" parameterType="java.util.Map" resultType="int">
    	select count(*) from store_thumb where store_id=#{username} and user_id=#{user_id}
    </select>
    <select id="selectThumb" resultType="int" parameterType="java.util.Map" > 
		select count(*) from store_thumb where store_id=#{store_id} and user_id=#{user_id} 
	</select>
     <delete id="deleteThumb" parameterType="java.util.Map">
    	delete store_thumb where store_id=#{store_id} and user_id=#{user_id}
    </delete>
    <insert id="insertThumb"  parameterType="java.util.Map">
    	insert into store_thumb values(SEQ_thumb.nextval,#{store_id},#{user_id})
    </insert>
    
    
    
    <select id="getJjimcount" parameterType="java.util.Map" resultType="int">
    	select count(*) from my_storelist where store_name=#{username}
    </select>    
    <select id="isJjim" parameterType="java.util.Map" resultType="int">
    	select count(*) from my_storelist where store_name=#{username} and user_email=#{user_id}
    </select>
    <select id="selectcount" parameterType="java.util.Map" resultType="int">
    	select count(*) from my_storelist where store_name=#{store_id} and user_email=#{user_id}
    </select> 
    <insert id="insertJjim"  parameterType="java.util.Map">
    	insert into my_storelist (store_name,user_email,ms_no) values (#{store_id},#{user_id},SEQ_mystore.nextval)
    </insert>
     <delete id="deleteJjim" parameterType="java.util.Map">
    	delete my_storelist where store_name=#{store_id} and user_email=#{user_id}
    </delete>
    
    
    
    <!-- 가게 정보 / 사진 수정용 -->
    <select id="selectFoodImg" parameterType="java.util.Map" resultType="storeDTO">
    	select fm.*,ff.fm_path from foodmenu fm join fm_file ff on fm.menu_no = ff.menu_no where fm.username = #{username}
    </select>
    <update id="updateStoreInfo" parameterType="java.util.Map">
    	update stores set password = #{password}, store_addr = #{store_addr}, store_phnum = #{store_phnum}, store_email = #{store_email}, store_time = #{store_time}, store_lat = #{store_lat}, store_lng = #{store_lng}, store_intro = #{store_intro} where username = #{username}
    </update>
    <update id="updateStoreImg" parameterType="java.util.Map">
    	update store_file set sf_path = #{sf_path} where sf_no = #{sf_no}
    </update>
    <insert id="insertStoreImg" parameterType="java.util.Map">
    	insert into store_file values(SEQ_SF.nextval,#{username},#{sf_path})
    </insert> 
    
    
	<!-- 메뉴 수정 -->
	<update id="updateFoodMenu" parameterType="java.util.Map">
		update foodmenu set menu_name = #{editMenu_name}, menu_tend=#{editMenu_tend}, menu_info = #{editMenu_info}, menu_price=#{editMenu_price} where menu_no=#{editMenu_no}
	</update>
	<update id="updateFoodImg" parameterType="java.util.Map">
		update fm_file set fm_path = #{editFm_path} where menu_no=#{editMenu_no}
	</update>
	<insert id="insertMoreFoodMenu" parameterType="java.util.Map">
		insert into foodmenu values(seq_foodmenu.nextval,#{menu_name},#{menu_tend},#{menu_info},sysdate,#{username},#{menu_price})
	</insert>
	<select id="selectNewMenuNo" parameterType="java.util.Map" resultType="storeDTO">
		select menu_no from foodmenu where menu_name = #{menu_name} and username = #{username}
	</select>
	<insert id="insertMoreFoodImg" parameterType="java.util.Map">
		insert into fm_file values(#{menu_no},#{fm_path} ,seq_ff.nextval)
	</insert>
	


 <!--///////////////////////////////////////////////////리뷰//////////////////////////////////////////////////////-->
    <!-- 리뷰 가져오기-->
	<select id="getStRvTotal" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM storereview WHERE store_name = #{username}
	</select>		
	<select id="getStoreReviewcnt" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT * FROM (SELECT T.*,ROWNUM R FROM (SELECT * FROM storereview WHERE store_name=#{username} order by rv_postdate desc)T)where R between #{strvstart} AND #{strvend}	
	</select>	
	<select id="getStoreReviewimg" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT * From review_file
	</select>
	<select id="getUsersNicks" parameterType="java.util.Map" resultType="UsersDTO">
		SELECT u_nick,username,u_img FROM users
	</select>

	
  

	<!-- 리뷰 삽입 용 -->
	<insert id="insertReview" parameterType="java.util.Map">
		insert into storereview (rv_no, rv_title, rv_content, user_email, store_name, menu_no)
		values (SEQ_STOREREVIEW.nextval,#{rv_title},#{rv_content},#{user_id},#{store_id},#{menu_no})
	</insert>
	<select  id="forInsertReview_file" parameterType="java.util.Map" resultType="MyPageDTO">
		select rv_no from storereview where user_email=#{user_id} and store_name = #{store_id} and rv_title = #{rv_title}
	</select>
	<insert id="insertNewReview_file" parameterType="java.util.Map">
		insert into review_file values(#{rv_no},#{rf_path},seq_rf.nextval)
	</insert>
	
	<!-- 리뷰 수정 용 -->
	<select id="getOneReviewForUpdate" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT u.u_nick,m.menu_name,rf.*,s.store_name store_name2 FROM 
		(select rf.rf_path,sr.* from (select * from storereview where store_name=#{store_id}) sr left outer join review_file rf on sr.rv_no = rf.rv_no) rf 
		join stores s on rf.store_name = s.username 
		join users u on rf.user_email = u.username
		join foodmenu m on rf.menu_no = m.menu_no
		WHERE rv_no=#{rv_no}
	</select>	
	<!--
		<select id="getOneReviewPicForUpdate" parameterType="java.util.Map" resultType="MyPageDTO">
			SELECT * FROM review_file WHERE rv_no=#{rv_no}
		</select>	
	 -->	
	<update id="updateReview" parameterType="java.util.Map">
     	UPDATE storereview SET menu_no=#{menu_no},rv_title=#{rv_title},rv_content=#{rv_content} WHERE rv_no=#{rv_no}
    </update>	
 	 <select id="getMenu4up" parameterType="java.util.Map" resultType="FoodMenuDTO">
		select menu_no, menu_name from foodmenu where username=#{store_id}
	</select>
	
	
	 <!-- 리뷰 삭제 용 -->
	<delete id="deleteOneReview" parameterType="java.util.Map">    	 
		delete from storereview where rv_no =#{rv_no}
	</delete>
	<delete id="deleteOneReviewPic" parameterType="java.util.Map">    	 
		delete from review_file where rv_no =#{rv_no}
	</delete>
	<delete id="deleteOneReviewThumb" parameterType="java.util.Map">    	 
		delete from review_thumb where rv_no =#{rv_no}
	</delete>    
	    		
	<!-- 리뷰 좋아요 -->	
	
	<!-- 베스트 리뷰 -->
	<select id="getBestRV" parameterType="java.util.Map" resultType="MyPageDTO" >
		select * from 
		(select rv_no,count (rv_no) as count from review_thumb group by rv_no) rt
		join storereview sr on rt.rv_no = sr.rv_no where  sr.store_name =#{username} order by count desc
	</select>
	
	<!-- 회원 리뷰 좋아요 유무 -->	
	<insert id="isRVThumb" parameterType="java.util.Map" >	
	    select count(*) from review_thumb where rv_no=#{rv_no} and uesr_email=#{user_id}
	</insert>
	<!-- 리뷰 당 좋아요 수 -->	
	<insert id="selectRVThumb" parameterType="java.util.Map" >	
	    select count(*) from review_thumb where rv_no=#{rv_no}
	</insert>
	<insert id="insertRVThumb" parameterType="java.util.Map" >	
	    INSERT INTO review_thumb VALUES (SEQ_revthumb.nextval,#{rv_no},#{user_id}) 
	</insert>
	<delete id="deleteRVThumb" parameterType="java.util.Map" >
		DELETE review_thumb WHERE rt_no=#{rt_no} 
	</delete>


<!--///////////////////////////////////////////////////리뷰//////////////////////////////////////////////////////-->



</mapper>