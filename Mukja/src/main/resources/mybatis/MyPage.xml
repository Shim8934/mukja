<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로.xml는 생략 -->
<!-- ※ ibatis와는 다르게 id값에 .(dot)을 사용 못한다 -->
<mapper namespace="mybatis.MyPage">

 	<!-- 회원정보 -->
 	<select id="getMyInfo" parameterType="java.util.Map" resultType="UsersDTO">   
		select * from users where username = #{user_id}
	</select>
	<update id="updateMyInfo" parameterType="java.util.Map" >
		UPDATE users SET password=#{password},u_nick=#{u_nick},
		u_age=#{u_age},u_ph=#{u_ph},u_addr=#{u_addr} where username=#{user_id}
	</update>
		
	
	
	<!-- 찜 -->
	<select id="getMyJjim" parameterType="java.util.Map" resultType="MyPageDTO">
		select * from MY_STORELIST where user_email= #{user_id}
	</select>	
	<select id="getJjimInfo" parameterType="java.util.Map" resultType="StoreDTO">
     	select * from stores 
    </select>
	<select id="getJjimImgs" parameterType="java.util.Map" resultType="StoreIMGDTO">    	 
		select * from store_file 
	</select>
	<delete id="deleteMyJjim" parameterType="java.util.Map" >
    	delete from my_storelist where ms_no=#{ms_no}
	</delete>
	
    
    
	
	
	<!-- 리뷰 -->
	<select id="getMyReview" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT * FROM (SELECT T.*,ROWNUM R FROM (SELECT * FROM storereview WHERE user_email=#{user_id} order by rv_postdate desc)T)
		where R between #{rvstart} AND #{rvend}	
	</select>
	<select id="getMyReviewPics" parameterType="java.util.Map" resultType="MyPageDTO">
		select * from review_file 	
	</select>
	
	
	<!-- 리뷰 수정 용 -->
	<select id="getMyReviewForUpdate" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT u.u_nick,sr.*,f.menu_name,s.store_name store_name2 FROM storereview sr  
		left outer join review_file rf on sr.rv_no = rf.rv_no 
		join stores s on sr.store_name = s.username 
		join foodmenu f on sr.menu_no = f.menu_no
        join users u on sr.user_email = u.username
        WHERE sr.rv_no=#{rv_no}
	</select>	
	<select id="getMyReviewPicForUpdate" parameterType="java.util.Map" resultType="MyPageDTO">
		SELECT * FROM review_file WHERE rv_no=#{rv_no}
	</select>	
	<select id="getMenu" parameterType="java.util.Map" resultType="StoreDTO">
		select menu_no, menu_name, username,menu_price from foodmenu
	</select>
	
	<update id="updateMyReview" parameterType="java.util.Map">
     	UPDATE storereview SET menu_no=#{menu_no},rv_title=#{rv_title},rv_content=#{rv_content} WHERE rv_no=#{rv_no}
    </update>
	<update id="updateMyReviewPic" parameterType="java.util.Map">
     	UPDATE review_file SET rf_path=#{rf_path} WHERE rv_no = #{rv_no}
    </update>
    
    <!-- 리뷰 삭제 용 -->
	<delete id="deleteMyReview" parameterType="java.util.Map">    	 
		delete from storereview where rv_no =#{rv_no}
	</delete>
	<delete id="deleteMyReviewPic" parameterType="java.util.Map">    	 
		delete from review_file where rv_no =#{rv_no}
	</delete>
	<delete id="deleteMyReviewThumb" parameterType="java.util.Map">    	 
		delete from review_thumb where rv_no =#{rv_no}
	</delete>
	
	
	
	<select id="getETrecv0" parameterType="java.util.Map" resultType="MyPageDTO"> 
      SELECT * FROM (SELECT E.*,ROWNUM R FROM 
      (select * from (select er_no,username applyer,erjoin_date,erjoin_role from er_members where erjoin_role=0) em 
      join (SELECT er_no,er_master,username store_id,er_title,er_tend,er_max,er_time FROM eattogether_room where er_master=#{user_id}) er 
      on em.er_no = er.er_no order by erjoin_date desc)E)where R between #{apstart} AND #{apend}   
   </select>
	<select id="getETrecv1" parameterType="java.util.Map" resultType="MyPageDTO">    	 
		SELECT er.er_no, er.username, er_time, er_tend, er_max, em.username user_id, em.erjoin_role , er_master FROM 
		(SELECT * FROM (SELECT er_no,username,erjoin_role  FROM er_members where username= #{user_id}) where erjoin_role= 1) em 
		join eattogether_room er on em.er_no = er.er_no order by er_postdate desc
	</select>
	<select id="getNicks" parameterType="java.util.Map" resultType="MyPageDTO">
		select em.er_no, u.username, u.u_nick, em.erjoin_role from er_members em 
		join users u on u.username = em.username where em.erjoin_role=1
	</select>
	<select id="getInCount" parameterType="java.util.Map" resultType="MyPageDTO">
		select er_no,count (er_no) as count from (select * from er_members where erjoin_role=1) group by er_no
	</select>
	
	
	
	<update id="er_Accept" parameterType="java.util.Map">
		UPDATE er_members SET erjoin_role = '1' where er_no = #{er_no} and username= #{user_id}
	</update>	
	<update id="er_Reject" parameterType="java.util.Map">
		UPDATE er_members set erjoin_role ='-1' where er_no=#{er_no} and username= #{user_id}
	</update>
	
	<delete id="deleteMyEM" parameterType="java.util.Map">
      delete er_members where er_no=#{er_no}
   </delete>
   
   <delete id="deleteMyERC" parameterType="java.util.Map">
      delete er_chat where er_no=#{er_no}
   </delete>
   
   <delete id="deleteMyER" parameterType="java.util.Map">
      delete eattogether_room where er_no=#{er_no}
   </delete>



	
	 
	 <select id="getMyJjimTotal" parameterType="java.util.Map" resultType="int">
		select count(*) from my_storelist where user_email = #{user_id}
	</select>
	<select id="getMyReviewTotal" parameterType="java.util.Map" resultType="int">
		select count(*) from storereview where user_email = #{user_id}
	</select> 
	<select id="getMyETApplTotal" parameterType="java.util.Map" resultType="int">
		select * from (SELECT * FROM er_members where username=#{user_id}) where erjoin_role=0
	</select>
	<select id="getMyETHistTotal" parameterType="java.util.Map" resultType="int">
		select * from (SELECT * FROM er_members where username=#{user_id}) where erjoin_role=1
	</select>
	
	
	
	<select id="modal" parameterType="java.util.Map" resultType="UsersDTO">   
      select * from users where username = #{users}
   </select>
	<select id="get1et1" parameterType="java.util.Map" resultType="MyPageDTO">  
	    SELECT * FROM (select er_no, username from er_members where username=#{user_id}) where er_no=#{er_no}
   </select>
   <select id="getURN" parameterType="java.util.Map" resultType="UsersDTO">
   		select em.username, u.u_nick from er_members em join users u on em.username = u.username where em.er_no=#{er_no}
   </select>
   <insert id="reportUser" parameterType="java.util.Map">   
      insert into user_report(ur_no,ur_title,ur_content,ur_target,ur_reporter) values (seq_userreport.nextval,#{ur_title},#{ur_content},#{ur_target},#{ur_reporter})
   </insert>

   <delete id="erDelete" parameterType="java.util.Map">
   		DELETE er_members WHERE username=#{user_id} and er_no = #{er_no}
   </delete>

	

</mapper>